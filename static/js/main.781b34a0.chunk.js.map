{"version":3,"sources":["redux/contacts/contactsAction.js","redux/contacts/contactsReducer.js","redux/store.js","Components/Section/Section.styled.jsx","Components/Section/Section.jsx","Components/Container/Container.syled.jsx","Components/Container/Container.jsx","Components/Form/Form.jsx","Components/Filter/Filter.styled.jsx","Components/Filter/Filter.jsx","Components/ContactList/ContactList.styled.jsx","redux/contacts/contactsSelector.js","Components/ContactList/ContactList.jsx","App.js","index.js"],"names":["addContact","createAction","deleteContact","getFiltered","contacts","createReducer","id","name","number","state","payload","find","alert","filter","contact","_","combineReducers","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","phonebook","persistReducer","contactsReducer","devTools","process","persistor","persistStore","Sections","styled","section","Section","children","Contain","div","MyForm","dispatch","useDispatch","initialValues","validate","values","errors","test","onSubmit","resetForm","shortid","generate","autoComplete","htmlFor","color","type","placeholder","FilterContainer","Input","input","FilterTitle","p","Filter","onChange","e","target","value","ListContact","ul","ItemContact","li","Paragraph","Button","button","getFiltredContacts","getContactsList","normalizeFilter","toLowerCase","includes","ContactList","useSelector","map","width","viewBox","onClick","onDeleteContact","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"uVAEMA,EAAaC,YAAa,iBAC1BC,EAAgBD,YAAa,oBAC7BE,EAAcF,YAAa,cCM3BG,EAAWC,YANO,CACtB,CAAEC,GAAI,KAAMC,KAAM,gBAAiBC,OAAQ,eAC3C,CAAEF,GAAI,KAAMC,KAAM,uCAA8BC,OAAQ,eACxD,CAAEF,GAAI,KAAMC,KAAM,kCAAyBC,OAAQ,iBAGvB,mBAC3BR,GAAa,SAACS,EAAD,OAAUC,EAAV,EAAUA,QAAV,OACZD,EAAME,MAAK,qBAAGJ,OAAoBG,EAAQH,QACtCK,MAAM,GAAD,OAAIF,EAAQH,KAAZ,6BADT,CAEKG,GAFL,mBAEiBD,OAJS,cAM3BP,GAAgB,SAACO,EAAD,OAAUC,EAAV,EAAUA,QAAV,OACfD,EAAMI,QAAO,SAACC,GAAD,OAAaA,EAAQR,KAAOI,QAPf,IAUxBG,EAASR,YAAc,GAAD,eACzBF,GAAc,SAACY,EAAD,YAAML,YAGRM,cAAgB,CAC7BZ,WACAS,WCXII,EAAgB,CACpBC,IAAK,gBACLC,YACAC,UAAW,CAAC,WAGRC,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAGIC,EAAQC,YAAe,CAC3BC,QAAS,CACPC,UAAWC,YAAenB,EAAeoB,IAE3CC,UAAUC,EACVlB,eAGImB,EAAYC,YAAaT,G,sBCpClBU,EAAWC,IAAOC,QAAV,yO,OCUNC,EARC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjB,OAAO,cAACJ,EAAD,UAAWI,KCHPC,EAAUJ,IAAOK,IAAV,+JCSLD,I,+CC2CAE,I,gBAAAA,EA9Cf,WACE,IAAMC,EAAWC,cACjB,OACE,cAAC,IAAD,CACEC,cAAe,CAAE7C,KAAM,GAAIC,OAAQ,IACnC6C,SAAU,SAACC,GACT,IAAMC,EAAS,GAaf,OAZKD,EAAO/C,KAEA+C,EAAO9C,OAGhB,8EAA8EgD,KAC7EF,EAAO9C,UAGT+C,EAAO/C,OACL,kFAPF+C,EAAO/C,OAAS,eAFhB+C,EAAOhD,KAAO,aAWTgD,GAETE,SAAU,SAACH,EAAD,GAA4B,IAAjBI,EAAgB,EAAhBA,UACXnD,EAAiB+C,EAAjB/C,KAAMC,EAAW8C,EAAX9C,OACd0C,EAASlD,EAAW,CAAEM,GAAIqD,IAAQC,WAAYrD,OAAMC,YACpDkD,KArBJ,SAwBE,eAAC,IAAD,CAAMG,aAAa,MAAnB,UACE,wBAAOC,QAAQ,OAAf,UACE,cAAC,IAAD,CAAgBC,MAAM,cADxB,WAGA,cAAC,IAAD,CAAOC,KAAK,OAAOzD,KAAK,OAAO0D,YAAY,eAC3C,cAAC,IAAD,CAAc1D,KAAK,SAEnB,wBAAOuD,QAAQ,SAAf,UACE,cAAC,IAAD,CAASC,MAAM,cADjB,YAGA,cAAC,IAAD,CAAOC,KAAK,MAAMzD,KAAK,SAAS0D,YAAY,gBAC5C,cAAC,IAAD,CAAc1D,KAAK,WAEnB,wBAAQyD,KAAK,SAAb,+BC9CKE,EAAkBvB,IAAOK,IAAV,0BACfmB,EAAQxB,IAAOyB,MAAV,0BACLC,GAAc1B,IAAO2B,EAAV,qICGT,SAASC,KACtB,IAAMrB,EAAWC,cAGjB,OACE,eAACe,EAAD,WACE,eAACG,GAAD,WACE,cAAC,IAAD,CAAiBN,MAAM,cADzB,2BAIA,cAACI,EAAD,CAAOH,KAAK,OAAOQ,SARN,SAACC,GAAD,OAAOvB,EAAS/C,EAAYsE,EAAEC,OAAOC,SAQXV,YAAY,kBCflD,IAAMW,GAAcjC,IAAOkC,GAAV,2LASXC,GAAcnC,IAAOoC,GAAV,2IAQXC,GAAYrC,IAAO2B,EAAV,gHAMTW,GAAStC,IAAOuC,OAAV,qDAGNnC,GAAUJ,IAAOK,IAAV,uFCxBPmC,GAAqB,SAAC1E,GACjC,IAAMI,EALmB,SAACJ,GAAD,OAAWA,EAAM0B,UAAUtB,OAKrCV,CAAYM,GACrBL,EAJuB,SAACK,GAAD,OAAWA,EAAM0B,UAAU/B,SAIvCgF,CAAgB3E,GAE3B4E,EAAkBxE,EAAOyE,cAC/B,OAAOlF,EAASS,QACd,gBAAGN,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,OACED,EAAK+E,cAAcC,SAASF,IAC5B7E,EAAO+E,SAASF,OC+BPG,OA9Bf,WACE,IAAMpF,EAAWqF,YAAYN,IACvBjC,EAAWC,cAGjB,OACE,cAACyB,GAAD,UACGxE,EAASsF,KAAI,gBAAGpF,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,eAACsE,GAAD,WACE,eAAC,GAAD,WACE,cAAC,IAAD,CAAgBf,MAAM,cACtB,cAACiB,GAAD,UAAYzE,OAEd,eAAC,GAAD,WACE,cAAC,IAAD,CACEoF,MAAM,OACNC,QAAQ,YACR7B,MAAM,cAER,cAACiB,GAAD,UAAYxE,IAAoB,OAGlC,cAACyE,GAAD,CAAQY,QAAS,kBAnBD,SAACvF,GAAD,OAAQ4C,EAAShD,EAAcI,IAmBxBwF,CAAgBxF,IAAvC,SACE,cAAC,IAAD,QAfcA,SCEXyF,OAhBf,WACE,OACE,eAAC,EAAD,WACE,eAAC,EAAD,WACE,2CACA,cAAC,EAAD,OAEF,eAAC,EAAD,WACE,0CACA,cAACxB,GAAD,IACA,cAAC,GAAD,W,MCTRyB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUlE,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAamE,QAAS,KAAM3D,UAAWA,EAAvC,SACE,cAAC,GAAD,UAIN4D,SAASC,eAAe,W","file":"static/js/main.781b34a0.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst addContact = createAction(\"phonebook/add\");\r\nconst deleteContact = createAction(\"phonebook/delete\");\r\nconst getFiltered = createAction(\"filter/get\");\r\n\r\nexport { addContact, deleteContact, getFiltered };\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addContact, deleteContact, getFiltered } from \"./contactsAction\";\r\n\r\nconst contactsInitial = [\r\n  { id: \"11\", name: \"Mike Wazowski\", number: \"22445566778\" },\r\n  { id: \"22\", name: \"James P. “Sulley” Sullivan\", number: \"55664411229\" },\r\n  { id: \"23\", name: \"Randall “Randy” Boggs\", number: \"88999124562\" },\r\n];\r\n\r\nconst contacts = createReducer(contactsInitial, {\r\n  [addContact]: (state, { payload }) =>\r\n    state.find(({ name }) => name === payload.name)\r\n      ? alert(`${payload.name} is already in contacts.`)\r\n      : [payload, ...state],\r\n\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [getFiltered]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport logger from \"redux-logger\";\r\nimport contactsReducer from \"./contacts/contactsReducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"savedContacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    phonebook: persistReducer(persistConfig, contactsReducer),\r\n  },\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n  middleware,\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Sections = styled.section`\r\n  background-color: #44424232;\r\n  margin-top: 20px;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n  padding-top: 10px;\r\n  padding-bottom: 15px;\r\n  &:not(:first-of-type) {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Sections } from \"./Section.styled\";\r\n\r\nconst Section = ({ children }) => {\r\n  return <Sections>{children}</Sections>;\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Section;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Contain = styled.div`\r\n  max-width: 320px;\r\n  border: thick double #c21111e2;\r\n  border-radius: 20px;\r\n  background-color: #ffffffba;\r\n  margin: 0 auto;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Contain } from \"./Container.syled\";\r\n\r\nconst Container = ({ children }) => {\r\n  return <Contain>{children}</Contain>;\r\n};\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Contain;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { RiContactsLine } from \"react-icons/ri\";\r\nimport { BsPhone } from \"react-icons/bs\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport shortid from \"shortid\";\r\nimport \"./Form.module.css\";\r\nimport { addContact } from \"../../redux/contacts/contactsAction\";\r\n\r\nfunction MyForm() {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Formik\r\n      initialValues={{ name: \"\", number: \"\" }}\r\n      validate={(values) => {\r\n        const errors = {};\r\n        if (!values.name) {\r\n          errors.name = \"Enter name\";\r\n        } else if (!values.number) {\r\n          errors.number = \"Enter number\";\r\n        } else if (\r\n          !/\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/i.test(\r\n            values.number\r\n          )\r\n        ) {\r\n          errors.number =\r\n            \"The number can only include numbers, spaces, dashes, brackets and start with +\";\r\n        }\r\n        return errors;\r\n      }}\r\n      onSubmit={(values, { resetForm }) => {\r\n        const { name, number } = values;\r\n        dispatch(addContact({ id: shortid.generate(), name, number }));\r\n        resetForm();\r\n      }}\r\n    >\r\n      <Form autoComplete='off'>\r\n        <label htmlFor='name'>\r\n          <RiContactsLine color='#c21111e2'></RiContactsLine> Name\r\n        </label>\r\n        <Field type='name' name='name' placeholder='enter name' />\r\n        <ErrorMessage name='name' />\r\n\r\n        <label htmlFor='number'>\r\n          <BsPhone color='#c21111e2'></BsPhone>Number\r\n        </label>\r\n        <Field type='tel' name='number' placeholder='+111-111-11' />\r\n        <ErrorMessage name='number' />\r\n\r\n        <button type='submit'>Add contact</button>\r\n      </Form>\r\n    </Formik>\r\n  );\r\n}\r\n\r\nexport default MyForm;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const FilterContainer = styled.div``;\r\nexport const Input = styled.input``;\r\nexport const FilterTitle = styled.p`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0 auto;\r\n  margin-bottom: 5px;\r\n  font-weight: 500;\r\n`;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getFiltered } from \"../../redux/contacts/contactsAction\";\r\nimport { RiPhoneFindLine } from \"react-icons/ri\";\r\nimport { FilterContainer, Input, FilterTitle } from \"./Filter.styled\";\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  const onChange = (e) => dispatch(getFiltered(e.target.value));\r\n\r\n  return (\r\n    <FilterContainer>\r\n      <FilterTitle>\r\n        <RiPhoneFindLine color='#c21111e2'></RiPhoneFindLine>\r\n        Find contacts by name\r\n      </FilterTitle>\r\n      <Input type='text' onChange={onChange} placeholder='enter name' />\r\n    </FilterContainer>\r\n  );\r\n}\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ListContact = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-bottom: 10px;\r\n  list-style: none;\r\n  padding-inline-start: 5px;\r\n  margin: 0 auto;\r\n  margin-top: 5px;\r\n`;\r\nexport const ItemContact = styled.li`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 5px 0 5px 0;\r\n  font-size: 12px;\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\n  margin-left: 10px;\r\n  margin-right: 10px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n`;\r\nexport const Button = styled.button`\r\n  margin-right: 0 auto;\r\n`;\r\nexport const Contain = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 120px;\r\n`;\r\n","export const getFiltered = (state) => state.phonebook.filter;\r\n\r\nexport const getContactsList = (state) => state.phonebook.contacts;\r\n\r\nexport const getFiltredContacts = (state) => {\r\n  const filter = getFiltered(state);\r\n  const contacts = getContactsList(state);\r\n\r\n  const normalizeFilter = filter.toLowerCase();\r\n  return contacts.filter(\r\n    ({ name, number }) =>\r\n      name.toLowerCase().includes(normalizeFilter) ||\r\n      number.includes(normalizeFilter)\r\n  );\r\n};\r\n","import { useSelector, useDispatch } from \"react-redux\";\r\nimport { RiContactsLine, RiDeleteBinLine } from \"react-icons/ri\";\r\nimport { BsPhone } from \"react-icons/bs\";\r\nimport {\r\n  ListContact,\r\n  ItemContact,\r\n  Paragraph,\r\n  Button,\r\n  Contain,\r\n} from \"./ContactList.styled\";\r\nimport { getFiltredContacts } from \"../../redux/contacts/contactsSelector\";\r\nimport { deleteContact } from \"../../redux/contacts/contactsAction\";\r\n\r\nfunction ContactList() {\r\n  const contacts = useSelector(getFiltredContacts);\r\n  const dispatch = useDispatch();\r\n  const onDeleteContact = (id) => dispatch(deleteContact(id));\r\n\r\n  return (\r\n    <ListContact>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ItemContact key={id}>\r\n          <Contain>\r\n            <RiContactsLine color='#c21111e2'></RiContactsLine>\r\n            <Paragraph>{name}</Paragraph>\r\n          </Contain>\r\n          <Contain>\r\n            <BsPhone\r\n              width='16px'\r\n              viewBox='0 0 16 16'\r\n              color='#c21111e2'\r\n            ></BsPhone>\r\n            <Paragraph>{number}</Paragraph>{\" \"}\r\n          </Contain>\r\n\r\n          <Button onClick={() => onDeleteContact(id)}>\r\n            <RiDeleteBinLine></RiDeleteBinLine>\r\n          </Button>\r\n        </ItemContact>\r\n      ))}\r\n    </ListContact>\r\n  );\r\n}\r\nexport default ContactList;\r\n","import \"./App.css\";\nimport Section from \"./Components/Section/Section\";\nimport Container from \"./Components/Container/Container\";\nimport MyForm from \"./Components/Form/Form\";\nimport Filter from \"./Components/Filter/Filter\";\nimport ContactList from \"./Components/ContactList/ContactList\";\n\nfunction App() {\n  return (\n    <Container>\n      <Section>\n        <h1>Phonebook</h1>\n        <MyForm />\n      </Section>\n      <Section>\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList></ContactList>\n      </Section>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport { store, persistor } from \"./redux/store\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <PersistGate loading={null} persistor={persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}